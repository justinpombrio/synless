// TODO: styles

LanguageSpec(
    name: "json",
    file_extensions: [".json"],
    grammar: GrammarSpec(
        constructs: [
            ConstructSpec(
                name: "Root",
                arity: Fixed([SortSpec(["value"])]),
                key: None,
            ),
            ConstructSpec(
                name: "Null",
                arity: Fixed([]),
                key: Some('x'),
            ),
            ConstructSpec(
                name: "True",
                arity: Fixed([]),
                key: Some('t'),
            ),
            ConstructSpec(
                name: "False",
                arity: Fixed([]),
                key: Some('f'),
            ),
            ConstructSpec(
                name: "String",
                arity: Texty,
                key: Some('s'),
            ),
            ConstructSpec(
                name: "Number",
                arity: Texty,
                key: Some('n'),
            ),
            ConstructSpec(
                name: "Array",
                arity: Listy(SortSpec(["value"])),
                key: Some('a'),
            ),
            ConstructSpec(
                name: "Key",
                arity: Texty,
                // TODO: Remove key binding for Json.Key in favor of automatic insertion
                key: Some('k'),
            ),
            ConstructSpec(
                name: "ObjectPair",
                arity: Fixed([SortSpec(["Key"]), SortSpec(["value"])]),
                // TODO: Remove key binding for Json.ObjectPair in favor of automatic insertion
                key: Some('p'),
            ),
            ConstructSpec(
                name: "Object",
                arity: Listy(SortSpec(["ObjectPair"])),
                key: Some('o'),
            ),
        ],
        sorts: [
            ("value", SortSpec(["Null", "bool", "String", "Number", "Array", "Object"])),
            ("bool", SortSpec(["True", "False"])),
        ],
        root_construct: "Root",
    ),
    default_display_notation: "DefaultDisplay",
    default_source_notation: None,
    notations: [
        NotationSetSpec(
            name: "DefaultDisplay",
            notations: [
                ("Root", Child(0)),
                ("Null",
                    Style(Properties(fg_color: Some(Base0E), bold: Some(true)),
                        Literal("null"))),
                ("True",
                    Style(Properties(fg_color: Some(Base09), bold: Some(true)),
                        Literal("true"))),
                ("False",
                    Style(Properties(fg_color: Some(Base09), bold: Some(true)),
                        Literal("false"))),
                ("String",
                    Style(Properties(fg_color: Some(Base0B)),
                        Concat(Literal("\""), Concat(Text, Literal("\""))))),
                ("Number",
                    Style(Properties(fg_color: Some(Base09)),
                        Check(IsEmptyText, Here, Concat(Literal("•"), Text), Text))),
                ("Array",
                    Count(
                        zero:
                        Concat(Style(Open, Literal("[")),
                            Concat(FocusMark,
                                Style(Close, Literal("]")))),
                        one: Choice(
                            // single line
                            Concat(Style(Open, Literal("[")),
                                Concat(Flat(Child(0)),
                                    Style(Close, Literal("]")))),
                            // multi line
                            Concat(Style(Open, Literal("[")),
                                Concat(Indent("    ", None, Concat(Newline, Child(0))),
                                    Concat(Newline,
                                        Style(Close, Literal("]"))))),
                        ),
                        many: Choice(
                            // single line
                            Concat(Style(Open, Literal("[")),
                                Concat(Fold(
                                        first: Flat(Child(0)),
                                        join: Concat(Left, Concat(Literal(", "), Flat(Right))),
                                    ),
                                    Style(Close, Literal("]")))),
                            // multi line
                            Concat(Style(Open, Literal("[")),
                                Concat(
                                    Indent("    ", None,
                                        Concat(
                                            Newline,
                                            Fold(
                                                first: Child(0),
                                                join: Concat(Left,
                                                    Concat(Literal(","),
                                                        Concat(Newline,
                                                            Right))),
                                            ),
                                        )
                                    ),
                                    Concat(Newline,
                                        Style(Close, Literal("]"))))),
                        ),
                    ),
                ),
                ("Key",
                    Style(Properties(fg_color: Some(Base0C)),
                        Check(IsEmptyText, Here, Concat(Literal("•"), Text), Text))),
                ("ObjectPair",
                    Choice(
                        // single line
                        Concat(Child(0),
                            Concat(Literal(": "),
                                Child(1))),
                        // multi line
                        Concat(Child(0),
                            Concat(Literal(":"),
                                Indent("    ", None, Concat(Newline, Child(1))))),
                    ),
                ),
                ("Object",
                    Count(
                        zero:
                        Concat(Style(Open, Literal("{")),
                            Concat(FocusMark,
                                Style(Close, Literal("}")))),
                        one: Choice(
                            // single line
                            Concat(Style(Open, Literal("{")),
                                Concat(Flat(Child(0)),
                                    Style(Close, Literal("}")))),
                            // multi line
                            Concat(Style(Open, Literal("{")),
                                Concat(Indent("    ", None, Concat(Newline, Child(0))),
                                    Concat(Newline,
                                        Style(Close, Literal("}"))))),
                        ),
                        many: Choice(
                            // single line
                            Concat(Style(Open, Literal("{")),
                                Concat(Fold(
                                        first: Flat(Child(0)),
                                        join: Concat(Left, Concat(Literal(", "), Flat(Right))),
                                    ),
                                    Style(Close, Literal("}")))),
                            // multi line
                            Concat(Style(Open, Literal("{")),
                                Concat(
                                    Indent("    ", None,
                                        Concat(
                                            Newline,
                                            Fold(
                                                first: Child(0),
                                                join: Concat(Left,
                                                    Concat(Literal(","),
                                                        Concat(Newline,
                                                            Right))),
                                            ),
                                        )
                                    ),
                                    Concat(Newline,
                                        Style(Close, Literal("}"))))),
                        ),
                    )
                ),
            ],
        ),
    ]
)
